// <auto-generated />
using EFCore.ParadeDB.PgSearch.Api.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EFCore.ParadeDB.PgSearch.Api.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pg_search");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EFCore.ParadeDB.PgSearch.Api.Persistence.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.ToTable("products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "Lightweight shoes designed for everyday running",
                            Name = "Running Shoes"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "Durable keyboard with tactile switches and RGB lighting",
                            Name = "Mechanical Keyboard"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "Over-ear headphones with active noise cancellation",
                            Name = "Noise Cancelling Headphones"
                        },
                        new
                        {
                            Id = 4L,
                            Description = "Fitness-focused smartwatch with heart rate monitor",
                            Name = "Smart Watch"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
